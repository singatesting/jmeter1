<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Run Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">/Users/gaurav_vishnoi/Downloads/apache-jmeter-2.11/projects</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="set Environment" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ENVIRONMENT" elementType="Argument">
            <stringProp name="Argument.name">ENVIRONMENT</stringProp>
            <stringProp name="Argument.value">${__P(env,dev)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER" elementType="Argument">
            <stringProp name="Argument.name">SERVER</stringProp>
            <stringProp name="Argument.value">Apache</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.group</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">username,password</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="OAuth Server Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${ENVIRONMENT}/jmeter-oauth.csv</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">baseURL,basePort,consumerKey,consumerSecret</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="OAuth Individual Server Config" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${ENVIRONMENT}/jmeter-oauth-individual.csv</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">baseURL,basePort,consumerKey,consumerSecret</stringProp>
      </CSVDataSet>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Set default Accept and Content-Type" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-Experience-API-Version</stringProp>
            <stringProp name="Header.value">1.0.0</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Planner Test Plan" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1404242297000</longProp>
        <longProp name="ThreadGroup.end_time">1404242297000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Self Controller" enabled="true">
          <stringProp name="TestPlan.comments">Runs individual .jmx files / Test Fragment within the JMeter/projects folder</stringProp>
          <stringProp name="IncludeController.includepath">Planner API.jmx</stringProp>
        </IncludeController>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Planner Test Fragment" enabled="true"/>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Course IDs Data Config" enabled="true">
          <stringProp name="filename">${ENVIRONMENT}/courseIDs.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="From and To Dates Data Config" enabled="true">
          <stringProp name="filename">${ENVIRONMENT}/FromandToDates.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner Test Data Clean-up Controller" enabled="true"/>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">username,password</stringProp>
            </CSVDataSet>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - Planner Clean-up Step - ${ENVIRONMENT}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token"></stringProp>
              <stringProp name="OAuthSampler.token_secret"></stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Test Planner For Clean-up - ${ENVIRONMENT}" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/user/${USER_ID}/planners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import com.eclipsesource.json.JsonArray;

String programs = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(programs);

Iterator jsonArrayI = jsonArray.iterator();
int childIdx = 1;
int idx = 1;
while(jsonArrayI.hasNext()) {
	JsonObject actualValue = (JsonObject) jsonArrayI.next();
	
	if (null != actualValue.get(&quot;description&quot;) &amp;&amp; actualValue.get(&quot;description&quot;).asString().contains(&quot;TESTING_CHILD&quot;)
	|| null != actualValue.get(&quot;name&quot;) &amp;&amp; actualValue.get(&quot;name&quot;).asString().contains(&quot;TESTING_CHILD&quot;)) {	
		JsonValue id = actualValue.get(&quot;id&quot;);
		vars.put(&quot;DELETE_CHILD_ID&quot;+childIdx,id.asString());
		childIdx++;
	} else if (null != actualValue.get(&quot;description&quot;) &amp;&amp; actualValue.get(&quot;description&quot;).asString().contains(&quot;TESTING_&quot;)
	|| null != actualValue.get(&quot;name&quot;) &amp;&amp; actualValue.get(&quot;name&quot;).asString().contains(&quot;TESTING_&quot;)) {	
		JsonValue id = actualValue.get(&quot;id&quot;);
		vars.put(&quot;DELETE_ID&quot;+idx,id.asString());
		idx++;
	}
	
}


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Child Planner for User ID ${USER_ID}" enabled="true">
            <stringProp name="ForeachController.inputVal">DELETE_CHILD_ID</stringProp>
            <stringProp name="ForeachController.returnVal">DPLANNER_ID</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
          </ForeachController>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="CLEAN-UP - Delete  Child Test Planners - ${DPLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${DPLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Clean up test data</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Planner for User ID ${USER_ID}" enabled="true">
            <stringProp name="ForeachController.inputVal">DELETE_ID</stringProp>
            <stringProp name="ForeachController.returnVal">DPLANNER_ID</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
          </ForeachController>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="CLEAN-UP - Delete  Test Planners - ${DPLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${DPLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Clean up test data</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner Flow - General" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Standard Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/standardID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Lesson Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/lessonID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Planner Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/plannerIDs.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Planner - Add Curriculum - Push/Pull Events - Verify Events" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">username,password</stringProp>
              </CSVDataSet>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - ${ENVIRONMENT}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token"></stringProp>
                <stringProp name="OAuthSampler.token_secret"></stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - Verify error if missing request body" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Verify error if missing request body</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Verify error if missing request body" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1675948648">invalid.request</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Verify error if missing request body</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - with course ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?courseRoot=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Planner created with CourseRoot should have a property &apos;courseId&apos; with the given courseRoot" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;courseID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${EM4_COURSE_ID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Curriculum" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/addCurriculum?course=${EM4_COURSE_ID}&amp;startDate=${FROM_DATE}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Exclude Unit Organizers from planner events (EM4)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=2014-08-01&amp;to=2015-08-01</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Unit Organizer and Routine excluded" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1875377780">&quot;systemNodeType&quot;: &quot;ROUTINES&quot;</stringProp>
                  <stringProp name="2039026811">&quot;description&quot;: &quot;Unit Organizer&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="TestPlan.comments">Verify no Unit Organizers or Routines are returned in planner events</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Event" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${CREATEEVENT_DATE1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place in Our World-ORIG DTE: ${CREATEEVENT_DATE1}--&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;APlace in Our World-ORIG DTE: ${CREATEEVENT_DATE1}--&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${CREATEEVENT_DATE2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place inOur World-ORIG DTE: ${CREATEEVENT_DATE2}--&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Same Events again - Verify no error" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${CREATEEVENT_DATE1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place in Our World-ORIG DTE: ${CREATEEVENT_DATE1}--&gt; DUPLICATE OF EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;APlace in Our World-ORIG DTE: ${CREATEEVENT_DATE1}--&gt; DUPLICATE OF EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${CREATEEVENT_DATE2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place inOur World-ORIG DTE: ${CREATEEVENT_DATE2}--&gt; DUPLICATE OF EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Verify can create the same event twice without error</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Event" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${PUSH_DATE1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER_NEW PUSH EVENT_PUSHDATE1&quot;,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${PUSH_DATE2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER_NEW PUSH EVENT_PUSHDATE2&quot;,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/push</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Event - Get Planner - Verify New JMeter Push Event Dates were inserted" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${PUSH_DATE1}&amp;to=${PUSH_DATE2}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Push Dates were inserted into Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1130044968">${PUSH_DATE1}</stringProp>
                  <stringProp name="1130044999">${PUSH_DATE2}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Pull  Event" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${PUSH_DATE1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place in Our World --&gt; ${PUSH_DATE1}--&gt; THIS IS BEING REMOVED THROUGH PULL EVENT PROCESS&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;A Place in Our World --&gt; ${PUSH_DATE1} --&gt; THIS IS BEING REMOVED THROUGH PULL EVENT PROCESS&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${PUSH_DATE2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place inOur World  --&gt; ${PUSH_DATE2} --&gt; THIS IS BEING REMOVED THROUGH PULL EVENT PROCESS&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/pull</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Pull Event - Get Planner - Verify New JMeter Pull Event were Removed from Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${PUSH_DATE1}&amp;to=${PUSH_DATE2}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Pull Event were Removed from Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-363528081">TESTING_</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Update Planner_startDate" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot; : &quot;Science Planner&quot;,&#xd;
  &quot;description&quot; : &quot;TESTING_JMETER_UPDATE START DATE --&gt; Planner for Third-Grade Science&quot;,&#xd;
  &quot;startDate&quot; : &quot;${TO_DATE}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Update Planner_start and endDate" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot; : &quot;Science Planner&quot;,&#xd;
  &quot;description&quot; : &quot;TESTING_JMETER_UPDATE START AND END DATES --&gt; Planner for Third-Grade Science&quot;,&#xd;
  &quot;startDate&quot; : &quot;${FROM_DATE}&quot;,&#xd;
  &quot;endDate&quot; : &quot;${TO_DATE}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Verify Planner Start and End Dates were updated" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${FROM_DATE}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Change Start and End Dates reflected in Planner events" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2037137967">${FROM_DATE}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner - Verify Planner Start and End Dates were updated" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Change to Start Date reflected in Planner itself" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1508003422">${TO_DATE}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Change to End Date reflected in Planner itself" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2037137967">${FROM_DATE}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify New JMeter Change to Description reflected in Planner itself" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-363528081">TESTING_</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - One Planner &amp; Date Range" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${FROM_DATE}&amp;to=${TO_DATE}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Multple Planner IDs &amp; Date Range" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/events?plannerId=${PLANNER_ID}&amp;plannerId=${PLANNER_ID2}&amp;from=${FROM_DATE}&amp;to=${TO_DATE}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner - One Planner ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Planner created with CourseRoot should have a property &apos;courseId&apos; with the given courseRoot" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;courseID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${EM4_COURSE_ID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Verifying classes for a Planner" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Class (to later be tied to a planner)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;description&quot;:&quot;Class to be tied to a Planner&quot;,&#xd;
&quot;name&quot;:&quot;Jmeter Planner Class&quot;,&#xd;
&quot;grade&quot;:&quot;2&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/class?course=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Class ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;CLASS_ID&quot;,id.asString());</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Tie the created class to Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/class/${CLASS_ID}/planner?planner=${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Classes" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/classes</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Class was tied to a planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3938">{}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="TestPlan.comments">Verify Class was tied to a planner - NOT blank</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Clean-up - Delete Class" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/class/${CLASS_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Event with Lesson ID" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Event with Lesson ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;2012-08-20&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place in Our World&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;lessonID&quot; : &quot;${LESSON_ID_1}&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;APlace in Our World&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;lessonID&quot; : &quot;${LESSON_ID_2}&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;2012-08-21&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;A Place inOur World&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;lessonID&quot; : &quot;${LESSON_ID_3}&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Verify can create the same event twice without error</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Event" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=2012-01-01&amp;to=2012-12-12</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Lessons/Events appear in response" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-546718560">${LESSON_ID_1}</stringProp>
                  <stringProp name="-546718529">${LESSON_ID_2}</stringProp>
                  <stringProp name="-546718498">${LESSON_ID_3}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Change Planner from 5 Day to Game Day planner (without AddCurriculum)" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">username,password</stringProp>
              </CSVDataSet>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - Game Day planner (without AddCurriculum) - ${ENVIRONMENT}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token"></stringProp>
                <stringProp name="OAuthSampler.token_secret"></stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - with course ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?courseRoot=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Planner created with CourseRoot should have a property &apos;courseId&apos; with the given courseRoot" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;courseID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${EM4_COURSE_ID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Set 1 Day to Holiday and more than 30 Days of Events to &quot;Non-Instructional&quot;" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&#xd;
  &quot;date&quot; : &quot;${HOLIDAY_1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;HOLIDAY / NON-INSTRUCTIONAL - ${HOLIDAY_1} --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;HOLIDAY&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ] &#xd;
 },{&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_1} - DAY 1 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_1} - DAY 1 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_2} - DAY 2 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_3} - DAY 3 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_4}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_4} - DAY 4 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_5}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_5} - DAY 5 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
    } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_6}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_6} - DAY 6 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_6} - DAY 6 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_7}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_7} - DAY 7 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_8}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_8} - DAY 8 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_9}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_9} - DAY 9 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_10}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_10} - DAY 10 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_11}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_11} - DAY 11 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_11} - DAY 11 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_12}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_12} - DAY 12 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_13}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_13} - DAY 13 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_14}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_14} - DAY 14 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_15}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_15} - DAY 15 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
    } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_16}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_16} - DAY 16 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_16} - DAY 16 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_17}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_17} - DAY 17 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_18}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_18} - DAY 18 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_19}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_19} - DAY 19 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_20}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_20} - DAY 20 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
    } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_21}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_21} - DAY 21 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_21} - DAY 21 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_22}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_22} - DAY 22 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_23}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_23} - DAY 23 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_24}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_24} - DAY 24 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_25}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_25} - DAY 25 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_26}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_26} - DAY 26 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_26} - DAY 26 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_27}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_27} - DAY 27 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_28}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_28} - DAY 28 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_29}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_29} - DAY 29 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_30}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_30} - DAY 30 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
}]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_31}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_31} - DAY 31 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_31} - DAY 31 --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_32}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_32} - DAY 32 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_33}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_33} - DAY 33 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_34}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_34} - DAY 34 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
} ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_35}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_35} - DAY 35 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
}]&#xd;
},{&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_36}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_36} - DAY 35 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
}]&#xd;
},{&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_37}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_37} - DAY 35 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
}]&#xd;
},{&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_38}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_38} - DAY 35 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
}]&#xd;
},{&#xd;
  &quot;date&quot; : &quot;${NONINSTRUCTIONAL_39}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;NON-INSTRUCTIONAL - ${NONINSTRUCTIONAL_38} - DAY 35 --&gt; EVENT 1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
   }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy Holiday Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);

for (int i = 1 ; i &lt;= 9; i++) {    // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
    addDay(calendar, 1);           // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;HOLIDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy Non-Instructional Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 46);               // Number of Days from &quot;Today&quot; to start with / set &quot;first Date&quot;
for (int i = 1 ; i &lt;= 50; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 1);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;NONINSTRUCTIONAL_&quot;+i,sdf.format(calendar.getTime()));
 
    System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${HOLIDAY_1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Holiday that was added is in the response" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2028654570">${HOLIDAY_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Two Game Days (Non-Instructional)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${GAMEDAY_1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER_NEW PUSH EVENT_bug fix - GAME DAY 1 - ${GAMEDAY_1}&quot;,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${GAMEDAY_2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER_NEW PUSH EVENT_bug fix - GAME DAY 2 - ${GAMEDAY_2}&quot;,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 10);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Verify Game Days were added to Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${GAMEDAY_1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify that the Game Day that was added is in the response" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-47477608">${GAMEDAY_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Another Game Day AFTER the last Instructional Date (Non-Instructional)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${GAMEDAY_3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;GAME DAY! TESTING_JMETER_NEW PUSH EVENT_bug fix - Game Day 3 - ${GAMEDAY_3}&quot;,&#xd;
    &quot;type&quot; : &quot;GAMEDAY&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 95);                     // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {          // Number of Dates to Capture / Store  
    addDay(calendar, 4);                  // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Verify Game Day was added to Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${GAMEDAY_3}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify the most recent Game Day that was added is is in the response" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-47477546">${GAMEDAY_3}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Change Planner from 5 Day to Game Day planner (WITH AddCurriculum)" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">username,password</stringProp>
              </CSVDataSet>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - Game Day planner (WITH AddCurriculum) - ${ENVIRONMENT}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token"></stringProp>
                <stringProp name="OAuthSampler.token_secret"></stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - with course ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?courseRoot=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Custom Non-Instructional Days (Holidays and Game Days) BEFORE Adding Curriculum - Verify NO Error" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"> [&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_1}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
    &quot;name&quot; : &quot;HOLIDAY - ${HOLIDAY_1} --&gt; EVENT 1&quot;,&#xd;
    &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
     }, {&#xd;
    &quot;name&quot; : &quot;HOLIDAY - ${HOLIDAY_1} --&gt; EVENT 2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;HOLIDAY&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
   },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_2}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_3}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_4}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;:&quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_5}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_6}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_7}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_8}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${HOLIDAY_9}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_1}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY_1 - ${GAMEDAY_1}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_2}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;HOLIDAY&quot;,&#xd;
        &quot;type&quot;: &quot;HOLIDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_3}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_4}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_5}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_6}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_7}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_8}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_9}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_10}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_11}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_12}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_13}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_14}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_15}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_16}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_17}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_18}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY&quot;,&#xd;
        &quot;type&quot;: &quot;GAMEDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_19}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_20}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_21}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY&quot;,&#xd;
        &quot;type&quot;: &quot;GAMEDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_22}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY&quot;,&#xd;
        &quot;type&quot;: &quot;GAMEDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_23}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY&quot;,&#xd;
        &quot;type&quot;: &quot;GAMEDAY&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_24}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;GAMEDAY&quot;,&#xd;
        &quot;type&quot;: &quot;GAMEDAY&quot;&#xd;
      }&#xd;
      ]&#xd;
        },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_25}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
   {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_26}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_27}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_28}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_29}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_30}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy Holiday Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);

for (int i = 1 ; i &lt;= 9; i++) {
    addDay(calendar, 1);
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;HOLIDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 10);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - From &quot;Holiday&quot; Date to &quot;One Year from Today&quot; - Verify Holiday and Game Day exists in planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${HOLIDAY_1}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Holiday (${HOLIDAY_1}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2028654570">${HOLIDAY_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Game Day (${GAMEDAY_1}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-47477608">${GAMEDAY_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Curriculum with start date of &quot;Today&quot;" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/addCurriculum?course=${EM4_COURSE_ID}&amp;startDate=${__time(yyyy-MM-dd,)}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Error Condition - Verify CanNOT Change Planner default daytypes to an invalid value - Friday to &quot;INVALIDDAYTYPE&quot; not allowed - Planner ID = ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;,&#xd;
&quot;dayTypes&quot;: {&#xd;
      &quot;MON&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;TUE&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;WED&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;THU&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;FRI&quot;: &quot;INVALIDDAYTYPE&quot;,&#xd;
      &quot;SAT&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
      &quot;SUN&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify CanNOT update Daytype to an invalid value - Verify 400 / Bad Request is returned" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Change Planner default daytypes - Friday to GAMEDAY - Planner ID = ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;,&#xd;
&quot;dayTypes&quot;: {&#xd;
      &quot;MON&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;TUE&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;WED&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;THU&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;FRI&quot;: &quot;GAMEDAY&quot;,&#xd;
      &quot;SAT&quot;: &quot;NONINSTRUCTIONAL&quot;,&#xd;
      &quot;SUN&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Change Planner default daytypes - Saturday to INSTRUCTIONAL - Planner ID = ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;,&#xd;
&quot;dayTypes&quot;: {&#xd;
      &quot;MON&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;TUE&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;WED&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;THU&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;FRI&quot;: &quot;GAMEDAY&quot;,&#xd;
      &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;SUN&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Updated Planner - Verify UPDATES to default Daytypes for Planner ID = ${PLANNER_ID} " enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import com.eclipsesource.json.JsonArray;
import org.apache.jmeter.util.JMeterUtils;

String events = prev.getResponseDataAsString();
JsonArray eventsArray = JsonArray.readFrom(events);
//String datesArray = eventsArray.get(&quot;date&quot;).asString();
//System.out.println(datesArray);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify GAMEDAY has been added to Daytypes" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="522380874">GAMEDAY</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify SATURDAY Daytype has been UPDATED to INSTRUCTIONAL" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-44059001"> &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot;" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Event - Add Additional (more than 15) Game Days (Non-Instructional)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
{&#xd;
&quot;date&quot;: &quot;${GAMEDAY_2}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;Game Day 2 - ${GAMEDAY_2}&quot;,&#xd;
&quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${GAMEDAY_3}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;Game Day - ${GAMEDAY_3}&quot;,&#xd;
&quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${GAMEDAY_4}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;Game Day - ${GAMEDAY_4}&quot;,&#xd;
&quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${GAMEDAY_5}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;Game Day - ${GAMEDAY_5}&quot;&#xd;
,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_6}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_6}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_7}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_7}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_8}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_8}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_9}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_9}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_10}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_10}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_11}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_11}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_12}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_12}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_13}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_13}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_14}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_14}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_15}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_15}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_16}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_16}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_17}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day - ${GAMEDAY_17}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${GAMEDAY_18}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Game Day 18 - ${GAMEDAY_18}&quot;,&#xd;
        &quot;type&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/push</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 10);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot; - Verify Additonal Game Days added" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Game Day (${GAMEDAY_2}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-47477577">${GAMEDAY_2}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Game Day (${GAMEDAY_18}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1471807862">${GAMEDAY_18}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Event - Pick a Date AFTER the last Instructional Date and Add ANOTHER Game Day (Non-Instructional)" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${GAMEDAY_19}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;Push Event - GAME DAY!  Insert Additional Game Day AFTER Last Instructional Date / TESTING_JMETER - Game Day 19 - ${GAMEDAY_19}&quot;,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/push</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 250);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot; - Verify Additonal Game Days added - ${GAMEDAY_19}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Game Day (${GAMEDAY_19}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1471807831">${GAMEDAY_19}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Pull Event - Convert Holiday 3 (${HOLIDAY_3}) from Non-Instructional to Instructional" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${HOLIDAY_3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;PULL Event - Convert Holiday 3 (${HOLIDAY_3}) from Non-Instructional to Instructional / TESTING_JMETER - ${HOLIDAY_3}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
} ]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/pull</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;GAME DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 250);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;GAMEDAY_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot; - Verify Holiday Converted to Instructional Day - (${HOLIDAY_3}) " enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Converted (${HOLIDAY_3}) exists in Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2028654632">${HOLIDAY_3}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify (${HOLIDAY_3}) was converted back to an Instructional Day (type = &quot;INSTRUCTIONAL&quot;)" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1236010401">&quot;type&quot;: &quot;INSTRUCTIONAL&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify (${HOLIDAY_3}) was converted back to an Instructional Day (contains a Lesson Id)" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2090485843">lessonID</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Change Planner from 5 Day to 6 Day planner (withOUT AddCurriculum)" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">username,password</stringProp>
              </CSVDataSet>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - Change Planner from 5 Day to 6 Day planner (withOUT AddCurriculum) - ${ENVIRONMENT}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token"></stringProp>
                <stringProp name="OAuthSampler.token_secret"></stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - with course ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?courseRoot=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Planner created with CourseRoot should have a property &apos;courseId&apos; with the given courseRoot" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;courseID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${EM4_COURSE_ID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Change Planner default daytypes - Saturday to INSTRUCTIONAL - Planner ID = ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;,&#xd;
&quot;dayTypes&quot;: {&#xd;
      &quot;MON&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;TUE&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;WED&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;THU&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;FRI&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;SUN&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Updated Planner - Verify UPDATES to default Daytypes for Planner ID = ${PLANNER_ID} " enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import com.eclipsesource.json.JsonArray;
import org.apache.jmeter.util.JMeterUtils;

String events = prev.getResponseDataAsString();
JsonArray eventsArray = JsonArray.readFrom(events);
//String datesArray = eventsArray.get(&quot;date&quot;).asString();
//System.out.println(datesArray);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify SATURDAY Daytype has been UPDATED to INSTRUCTIONAL" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-44059001"> &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Instructional Days - Make a Saturday Instructional " enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 1 - ${MANUAL_INSTRUCTIONAL_DAYS_1}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
},&#xd;
 {&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 2 - ${MANUAL_INSTRUCTIONAL_DAYS_2}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, {&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 3 - ${MANUAL_INSTRUCTIONAL_DAYS_3}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
},&#xd;
{&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_4}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 4 - ${MANUAL_INSTRUCTIONAL_DAYS_4}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, &#xd;
{&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_5}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 5 - ${MANUAL_INSTRUCTIONAL_DAYS_5}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
},&#xd;
{&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_6}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 6 - ${MANUAL_INSTRUCTIONAL_DAYS_6}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}, &#xd;
{&#xd;
  &quot;date&quot; : &quot;${MANUAL_INSTRUCTIONAL_DAYS_7}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;TESTING_JMETER - INSTRUCTIONAL DAY 7 - ${MANUAL_INSTRUCTIONAL_DAYS_7}&quot;,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 0&#xd;
  } ]&#xd;
}&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;MANUAL INSTRUCTIONAL&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 1);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 7; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 1);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;MANUAL_INSTRUCTIONAL_DAYS_&quot;+i,sdf.format(calendar.getTime()));
 
    System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Verify MANUAL INSTRUCTIONAL Days were added to Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MANUAL_INSTRUCTIONAL_DAYS_1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify the MANUAL INSTRUCTION DAY 1 (${MANUAL_INSTRUCTIONAL_DAYS_1}) was added to the Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-524877108">${MANUAL_INSTRUCTIONAL_DAYS_1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify the MANUAL INSTRUCTION DAY 7 (${MANUAL_INSTRUCTIONAL_DAYS_7}) was added to the Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-524876922">${MANUAL_INSTRUCTIONAL_DAYS_7}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify there are NO NON-INSTRUCTIONAL Days in the response (therefore a SATURDAY has been made INSTRUCTIONAL)" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2011756428">NONINSTRUCTIONAL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Change Planner from 5 Day to 6 Day planner (WITH AddCurriculum)" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller - ${ENVIRONMENT}" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">username,password</stringProp>
              </CSVDataSet>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER - GENERAL*** - EM4 - Change Planner from 5 Day to 6 Day planner (WITH AddCurriculum) - ${ENVIRONMENT}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token"></stringProp>
                <stringProp name="OAuthSampler.token_secret"></stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - with course ID" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?courseRoot=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Planner created with CourseRoot should have a property &apos;courseId&apos; with the given courseRoot" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;courseID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${EM4_COURSE_ID}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Curriculum with start date of &quot;Today&quot;" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/addCurriculum?course=${EM4_COURSE_ID}&amp;startDate=${__time(yyyy-MM-dd,)}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Event - Add Additional INSTRUCTIONAL Days" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
{&#xd;
&quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_2}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_Day 2 - ${MANUAL_INSTRUCTIONAL_2}&quot;,&#xd;
&quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_3}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_DAY 3 - ${MANUAL_INSTRUCTIONAL_3}&quot;,&#xd;
&quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_4}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_4 - ${MANUAL_INSTRUCTIONAL_4}&quot;,&#xd;
&quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
}&#xd;
]&#xd;
},&#xd;
{&#xd;
&quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_5}&quot;,&#xd;
&quot;events&quot;: [&#xd;
{&#xd;
&quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_5 - ${MANUAL_INSTRUCTIONAL_5}&quot;&#xd;
,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_6}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_6 - ${MANUAL_INSTRUCTIONAL_6}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_7}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_7 - ${MANUAL_INSTRUCTIONAL_7}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_8}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_8 - ${MANUAL_INSTRUCTIONAL_8}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_9}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_9 - ${MANUAL_INSTRUCTIONAL_9}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_10}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_10 - ${MANUAL_INSTRUCTIONAL_10}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_11}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_11 - ${MANUAL_INSTRUCTIONAL_11}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_12}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_12 - ${MANUAL_INSTRUCTIONAL_12}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_13}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_13 - ${MANUAL_INSTRUCTIONAL_13}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_14}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_14 - ${MANUAL_INSTRUCTIONAL_14}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_15}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_15 - ${MANUAL_INSTRUCTIONAL_15}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_16}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_16 - ${MANUAL_INSTRUCTIONAL_16}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_17}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_17 - ${MANUAL_INSTRUCTIONAL_17}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;date&quot;: &quot;${MANUAL_INSTRUCTIONAL_18}&quot;,&#xd;
    &quot;events&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;MANUAL_INSTRUCTIONAL_18 - ${MANUAL_INSTRUCTIONAL_18}&quot;,&#xd;
        &quot;type&quot;: &quot;INSTRUCTIONAL&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/push</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor - Generate Dummy &quot;MANUAL INSTRUCTION DAY&quot; Dates" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;

void addDay(Calendar calendar, int offsetDay) {
    calendar.add(Calendar.DAY_OF_YEAR, offsetDay);
}

Calendar calendar = Calendar.getInstance();
//calendar.set(2015, Calendar.JANUARY, 1);
addDay(calendar, 1);               // Number of Days from &quot;Today&quot; to start with / set &quot;first date&quot;
for (int i = 1 ; i &lt;= 30; i++) {    // Number of Dates to Capture / Store
    addDay(calendar, 4);            // Number of Dates to increment by
    // Only for preview sample (if sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);)
    sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
    vars.put(&quot;MANUAL_INSTRUCTIONAL_&quot;+i,sdf.format(calendar.getTime()));
 
    //System.out.println(sdf.format(calendar.getTime()));
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot; - Verify NO NON-Instructional days exist" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify there are NO NON-INSTRUCTIONAL Days in the response" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2011756428">NONINSTRUCTIONAL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Change Planner default daytypes - Saturday to INSTRUCTIONAL - Planner ID = ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE TEST PLANNER&quot;,&#xd;
&quot;dayTypes&quot;: {&#xd;
      &quot;MON&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;TUE&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;WED&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;THU&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;FRI&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;SUN&quot;: &quot;NONINSTRUCTIONAL&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Updated Planner - Verify UPDATES to default Daytypes for Planner ID = ${PLANNER_ID} " enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import com.eclipsesource.json.JsonArray;
import org.apache.jmeter.util.JMeterUtils;

String events = prev.getResponseDataAsString();
JsonArray eventsArray = JsonArray.readFrom(events);
//String datesArray = eventsArray.get(&quot;date&quot;).asString();
//System.out.println(datesArray);
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify SATURDAY Daytype has been UPDATED to INSTRUCTIONAL" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-44059001"> &quot;SAT&quot;: &quot;INSTRUCTIONAL&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - from &quot;Today&quot; to &quot;One Year from Today&quot;" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify there are NO NON-INSTRUCTIONAL Days in the response (therefore a SATURDAY has been made INSTRUCTIONAL)" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2011756428">NONINSTRUCTIONAL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract LESSON IDs" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
Iterator eventIterator = jsonArray.iterator();
Iterator lessonIterator = jsonArray.iterator();

int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	//l_idx++;

int l_idx = 1;
	while(lessonIterator.hasNext()){
		JsonObject lesson = (JsonObject) lessonIterator.next();
		JsonValue lessonId = lesson.get(&quot;lessonID&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot; + &quot;:&quot; + lessonId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot;, lessonId.asString());
		l_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Push Events - MOVE a LESSON (event) ${LESSON_ID} to a Saturday - ${SATURDAY_DATES}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[ &#xd;
{ &#xd;
&quot;events&quot;:[ &#xd;
{ &#xd;
&quot;instructional&quot;:&quot;true&quot;,&#xd;
&quot;lessonID&quot;:&quot;${LESSON_ID}&quot;,&#xd;
&quot;seq&quot;:0,&#xd;
&quot;type&quot;:&quot;INSTRUCTIONAL&quot;,&#xd;
&quot;fixed&quot;:&quot;false&quot;&#xd;
}&#xd;
],&#xd;
&quot;date&quot;:&quot;${SATURDAY_DATES}&quot;&#xd;
}&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events/push</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner Events - Verify (manually) SATURDAYs were added as INSTRUCTIONAL Days (${SATURDAY_DATES} &amp; ${LAST_SATURDAY_DATE})" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${SATURDAY_DATES}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify the SATURDAY (${SATURDAY_DATES}) was added to the Planner" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1980191815">${SATURDAY_DATES}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Last SATURDAY of the Year was added to the Planner - (${LAST_SATURDAY_DATE})" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1468724507">${LAST_SATURDAY_DATE}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify there are NO NON-INSTRUCTIONAL Days in the response (therefore a SATURDAY has been made INSTRUCTIONAL)" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2011756428">NONINSTRUCTIONAL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract LESSON IDs" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
Iterator eventIterator = jsonArray.iterator();
Iterator lessonIterator = jsonArray.iterator();

int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	//l_idx++;

int l_idx = 1;
	while(lessonIterator.hasNext()){
		JsonObject lesson = (JsonObject) lessonIterator.next();
		JsonValue lessonId = lesson.get(&quot;lessonID&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot; + &quot;:&quot; + lessonId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;L&quot;+l_idx+&quot;_ID&quot;, lessonId.asString());
		l_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Data Clean-up of Events, Curriculum and Planner" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Delete Events" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?course=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Delete Curriculum" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/curriculum?course=${EM4_COURSE_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Delete Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="PARENT / CHILD PLANNER DATA SET-UP" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create PARENT Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_PARENT Planner&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract PARENT Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PARENT_PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create CHILD Planner" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_CHILD Planner&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner?parent=${PARENT_PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract CHILD Planner ID" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;CHILD_PLANNER_ID&quot;,id.asString());
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Error Conditions" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Try to Delete Planner which has child Planner associated to it - Verify Error" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PARENT_PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify error - not allowed to delete planner it has child planners associated" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1302507194">Invalid request</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner Flow - Music/Spire" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Course IDs Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/courseIDs.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="From and To Dates Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/FromAndToDates.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Lesson Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/lessonID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Non Existent Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/nonExistentID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Planner Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/plannerIDs.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Standard Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/standardID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Music Teacher Login Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${ENVIRONMENT}/jmeter-login-musicTeacher.csv</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">username,password</stringProp>
            </CSVDataSet>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***CUSTOM PLANNER*** - SPIRE/MUSIC - MUSIC TEACHER" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token"></stringProp>
              <stringProp name="OAuthSampler.token_secret"></stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="CREATE Custom Planner - MUSIC - Created: ${__time(EEE\, MM/dd/yyyy-HH:mm:ss)}" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_MUSIC Planner&quot;,&#xd;
&quot;description&quot; : &quot;TESTING_JMETER --&gt; CREATE PLANNER FOR MUSIC - ${__time(EEE\, MM/dd/yyyy-HH:mm:ss)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ADD DATES and EVENTS to Custom Planner - MUSIC" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Day 1 &amp; 2 Dates and Events" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Add DATES - DAY 1 &amp; 2 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
{&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY1}&quot;,&#xd;
  &quot;events&quot; : &#xd;
  [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY1} MUSIC DAY 1 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
},&#xd;
{&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
  &quot;events&quot; : &#xd;
  [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
} ]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Custom Planner Events - Verify Day 1 Added" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${MUSICEVENT_DAY2}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 1 added" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811797">${MUSICEVENT_DAY1}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 added" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811828">${MUSICEVENT_DAY2}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Add New Event to Day 1 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
  &quot;id&quot;: &quot;${D1_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY1}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY1} MUSIC DAY 1 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
    &quot;id&quot;: &quot;${D1E1_ID}&quot;  &#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY1} MUSIC DAY 1 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 2&#xd;
  } ]&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 1/Event2: ${D1E2_ID} has been ADDED to Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943602540">${D1E2_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Add New Event to Day 2 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
  &quot;id&quot;: &quot;${D2_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
    &quot;id&quot;: &quot;${D2E1_ID}&quot;  &#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 2&#xd;
  } ]&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2/Event2: ${D2E2_ID} has been ADDED to Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-56098859">${D2E2_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Day 3 &amp; 4 Dates and Events" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Add DATES - DAY 3 &amp; 4 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
    } ]&#xd;
   }, {&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY4}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY4} UNCHANGED MUSIC DAY 4 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY4}--&gt; D4/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
} ]&#xd;
} ]&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 1;

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="DATES - Add Planner Dates - Error Conditions" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Attempt to create a Planner Date without Event Data - Error - Not Allowed" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
{&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY1}&quot;&#xd;
} &#xd;
]&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify error occurs if attempt to create a Planner Date without Event info" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1670456739">s not associated with any day id or events</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Add DATES - DAY 1 &amp; 2 - Create Same Events Again - MUSIC  - Verify ERROR - Not Allowed" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
{&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY1}&quot;,&#xd;
  &quot;events&quot; : &#xd;
  [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY1} MUSIC DAY 1 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
},&#xd;
{&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
  &quot;events&quot; : &#xd;
  [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  } ]&#xd;
} ]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Post Day/Date - Verify Error if trying to create a new date when that date already exists in the Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1302507194">Invalid request</stringProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Verify error message - not allowed to create a new date when a record for that date already exists in the planner</stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="EVENTS - UPDATE, DELETE and VALIDATE Custom Planner EVENTS - MUSIC" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Delete Existing EVENTS" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES / EVENTS - Delete Existing Date/Events from Day 1 / Update same data on Day 3 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
  &quot;id&quot;:&quot;${D1_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY1}&quot;&#xd;
  }, &#xd;
  {&#xd;
  &quot;id&quot;:&quot;${D3_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
    &quot;id&quot;: &quot;${D3E1_ID}&quot;&#xd;
} ]&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 1: ${D1_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2100370311">${D1_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 3/Event1 ${D3E1_ID} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="830481301">${D3E1_ID}</stringProp>
                    <stringProp name="424833871">2014-06-28 MUSIC DAY 3 / EVENT 1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 4: ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Delete Existing Events from Day 2 / Update Desc on Day 3 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
{&quot;id&quot; : &quot;${D2_ID}&quot;,&#xd;
&quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
    &quot;events&quot; : [ {&#xd;
      &quot;name&quot; : &quot;${MUSICEVENT_DAY2} REMOVED EVENT1 - MUSIC DAY 2 / EVENT 2 IS NOW D2/E1 - ONLY SEQ 2 REMAINS! - ORIG DTE/EVENT: ${MUSICEVENT_DAY2}--&gt; D2/E2&quot;,&#xd;
      &quot;fixed&quot; : false,&#xd;
      &quot;instructional&quot; : true,&#xd;
      &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
      &quot;seq&quot; : 2,&#xd;
    &quot;id&quot; : &quot;${D2E2_ID}&quot;&#xd;
    }]}, &#xd;
{&quot;id&quot; : &quot;${D3_ID}&quot;,&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} UPDATED_MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
   &quot;id&quot;: &quot;${D3E1_ID}&quot;&#xd;
  } ]&#xd;
  } &#xd;
  ]&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner - ${PLANNER_ID}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 / Event 1: ${D2E1_ID} is DELETED/REMOVED from Planner ${PLANNER_ID}" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-57022380">${D2E1_ID}</stringProp>
                    <stringProp name="-2115030035">MUSIC DAY 2 / EVENT 1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 / Event 2: ${D2E2_ID} has an UPDATED NAME field" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-56098859">${D2E2_ID}</stringProp>
                    <stringProp name="662811828">${MUSICEVENT_DAY2}</stringProp>
                    <stringProp name="-1683140393">REMOVED EVENT1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 3 / Event 1 ${D3E1_ID} is UPDATED" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="830481301">${D3E1_ID}</stringProp>
                    <stringProp name="-1368039926">UPDATED_MUSIC DAY 3 / EVENT 1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 4: ${MUSICEVENT_DAY4} is UNCHANGED" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Update Existing EVENTS" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Update Existing Event Description on Day 3 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
{&quot;id&quot; : &quot;${D3_ID}&quot;,&#xd;
 &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} SECOND UPDATE_MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
   &quot;id&quot;: &quot;${D3E1_ID}&quot;&#xd;
  } ]&#xd;
  } &#xd;
  ]&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner - ${PLANNER_ID}" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 / Event 1: ${D2E1_ID} is DELETED/REMOVED from Planner ${PLANNER_ID}" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-57022380">${D2E1_ID}</stringProp>
                    <stringProp name="-2115030035">MUSIC DAY 2 / EVENT 1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 / Event 2: ${D2E2_ID} has an UPDATED NAME field" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-56098859">${D2E2_ID}</stringProp>
                    <stringProp name="662811828">${MUSICEVENT_DAY2}</stringProp>
                    <stringProp name="-1683140393">REMOVED EVENT1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 3 / Event 1 ${D3E1_ID} is UPDATED" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="830481301">${D3E1_ID}</stringProp>
                    <stringProp name="503759844">SECOND UPDATE_MUSIC DAY 3 / EVENT 1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 4: ${MUSICEVENT_DAY4} is UNCHANGED" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Update - Different EVENT ID IS Allowed - Day 3: ${D3_ID} - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ &#xd;
 {&#xd;
  &quot;id&quot; : &quot;${D3_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} THIRD UPDATE_MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
     &quot;id&quot;: &quot;${NON_EXISTENT_ID}&quot;&#xd;
               } &#xd;
             ]&#xd;
 }&#xd;
]&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify NO ERROR even if an Event ID is passed that does NOT exist within a specific Planner Date (id)" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1302507194">Invalid request</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Update Existing EVENTS - Error Conditions" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Event ID already exists on planner ${PLANNER_ID} - MUSIC - Not Allowed" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[&#xd;
   {&#xd;
      &quot;id&quot;: &quot;${D2_ID}&quot;,&#xd;
      &quot;date&quot;: &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
      &quot;events&quot;: [&#xd;
         {&#xd;
            &quot;name&quot;: &quot;${MUSICEVENT_DAY2} Event ID already eixsts on Planner (D4E1) -- Do NOT update MUSIC DAY 2 / EVENT 1!!!&quot;,&#xd;
            &quot;fixed&quot;: false,&#xd;
            &quot;instructional&quot;: true,&#xd;
            &quot;type&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
            &quot;seq&quot;: 1,&#xd;
            &quot;id&quot;: &quot;${D4E1_ID}&quot;&#xd;
         }&#xd;
      ]&#xd;
   }&#xd;
]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Cannot add an Event ID that already exists on Planner - Verify Invalid Request error" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1302507194">Invalid request</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Cannot add an Event ID that already exists on Planner - Verify Event NOT updated" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1380521051">Event ID already eixsts</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 2; //--after Day 1 events were deleted, need to increment the index by 1 to keep the correct DATE IDs on the right dates//

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 2; //--after Day 1 and EVENTS were deleted, need to increment the index by 1 to keep the correct EVENT IDs on the right dates//
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Duplicate Event IDs - MUSIC - Not Allowed" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[&#xd;
   {&#xd;
      &quot;id&quot;: &quot;${D1_ID}&quot;,&#xd;
      &quot;date&quot;: &quot;${MUSICEVENT_DAY1}&quot;,&#xd;
      &quot;events&quot;: [&#xd;
         {&#xd;
            &quot;name&quot;: &quot;${MUSICEVENT_DAY1} MUSIC DAY 1 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E1&quot;,&#xd;
            &quot;fixed&quot;: false,&#xd;
            &quot;instructional&quot;: true,&#xd;
            &quot;type&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
            &quot;seq&quot;: 1,&#xd;
            &quot;id&quot;: &quot;${D1E2_ID}&quot;&#xd;
         },&#xd;
         {&#xd;
            &quot;name&quot;: &quot;${MUSICEVENT_DAY1} SENDING DUPLICATE EVENT IDS WILL MERGE RECORDS INTO ONE EVENT!  MUSIC DAY 1 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY1}--&gt; D1/E2&quot;,&#xd;
            &quot;fixed&quot;: false,&#xd;
            &quot;instructional&quot;: true,&#xd;
            &quot;type&quot;: &quot;INSTRUCTIONAL&quot;,&#xd;
            &quot;seq&quot;: 2,&#xd;
            &quot;id&quot;: &quot;${D1E2_ID}&quot;  &#xd;
         }&#xd;
      ]&#xd;
   }&#xd;
]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Duplicate Event IDs not allowed" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1302507194">Invalid request</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 2; //--after Day 1 events were deleted, need to increment the index by 1 to keep the correct DATE IDs on the right dates//

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 2; //--after Day 1 and EVENTS were deleted, need to increment the index by 1 to keep the correct EVENT IDs on the right dates//
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Update - Different Event Type Not Allowed - Day 3 -  MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
&quot;id&quot; : &quot;${D3_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
    &quot;id&quot; : &quot;${D3E1_ID}&quot; &#xd;
 },&#xd;
 {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} NEW EVENT WITH DIFFERENT EVENT TYPE NOT ALLOWED - MUSIC DAY 3 / EVENT 2  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;NONINSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 2&#xd;
 }]&#xd;
}]&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Error since cannot pass in different Event Types on same day" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-51955577"> have events with different types</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner &amp; Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 2; //--after Day 1 events were deleted, need to increment the index by 1 to keep the correct DATE IDs on the right dates//

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 2; //--after Day 1 and EVENTS were deleted, need to increment the index by 1 to keep the correct EVENT IDs on the right dates//
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Sending Duplicate Sequence Nums will error - Day 2: ${D2_ID} - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
&quot;id&quot; : &quot;${D2_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 999,&#xd;
    &quot;id&quot; : &quot;${D2E1_ID}&quot;&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 999,&#xd;
    &quot;id&quot; : &quot;${D2E2_ID}&quot;&#xd;
  }]&#xd;
  }]&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify error occurs since request contains two events with the same SEQUENCE NUMBER - NOT ALLOWED" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1723017292">Invalid request:</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Invalid Planner ID returns error - MUSIC - Not Allowed" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
&quot;id&quot; : &quot;${D2_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY2}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 999,&#xd;
    &quot;id&quot; : &quot;${D2E1_ID}&quot;&#xd;
  }, {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY2} MUSIC DAY 2 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY2}--&gt; D2/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 999,&#xd;
    &quot;id&quot; : &quot;${D2E2_ID}&quot;&#xd;
  } ]&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${NON_EXISTENT_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Invalid Planner ID returns error" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-948769873">Unable to locate planner with ID ${NON_EXISTENT_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET Planner EVENTS by Various Criteria" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Planner - One Planner ID" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - One Planner ID &amp; Date Range" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${TO_DATE}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="EVENTS - Get Planner Events - Multple Planner IDs &amp; Date Range" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/events?plannerId=${PLANNER_ID}&amp;plannerId=${PLANNER_ID2}&amp;from=${MUSICEVENT_DAY1}&amp;to=${TO_DATE}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="DATES - UPDATE, DELETE and VALIDATE Custom Planner DATES - MUSIC" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="DATES - Pre-Condition - Data Set-up - Days 5,6 &amp; 7" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Add DATES - DAY 5, 6 &amp; 7 - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ {&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY5}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY5} ONE EVENT - MUSIC DAY 5 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY5}--&gt; D5/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
    } ]&#xd;
   }, {&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY6}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY6} TWO EVENTS - MUSIC DAY 6 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY6}--&gt; D6/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  },{&#xd;
  	&quot;name&quot; : &quot;${MUSICEVENT_DAY6} TWO EVENTS - MUSIC DAY 6 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY6}--&gt; D6/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 2&#xd;
     } ]&#xd;
  },{&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY7}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY7} THREE EVENTS - MUSIC DAY 7 / EVENT 1 - ORIG DTE: ${MUSICEVENT_DAY7}--&gt; D7/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1&#xd;
  },{&#xd;
  	&quot;name&quot; : &quot;${MUSICEVENT_DAY7} THREE EVENTS - MUSIC DAY 7 / EVENT 2 - ORIG DTE: ${MUSICEVENT_DAY7}--&gt; D7/E2&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 2&#xd;
  },{&#xd;
  	&quot;name&quot; : &quot;${MUSICEVENT_DAY7} THREE EVENTS - MUSIC DAY 7 / EVENT 3 - ORIG DTE: ${MUSICEVENT_DAY7}--&gt; D7/E3&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 3&#xd;
} ]&#xd;
} ]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Get Planner Events - Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract DAY and EVENT IDs" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;



String classString = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(classString);
Iterator dayIterator = jsonArray.iterator();
int d_idx = 2; //starting at 2 to account for a planner date that is deleted earlier in the script; otherwise, the ids extracted below get out of sync

log.info(&quot;-------------------------------------------&quot;);
while(dayIterator.hasNext()) {
	JsonObject day = (JsonObject) dayIterator.next();
	JsonValue dayId= day.get(&quot;id&quot;);

	log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;_ID&quot; + &quot;:&quot; + dayId.asString());
	vars.put(&quot;D&quot;+d_idx+&quot;_ID&quot;, dayId.asString());

	JsonArray events = day.get(&quot;events&quot;);
	Iterator eventIterator = events.iterator();

int e_idx = 1;
	while(eventIterator.hasNext()){
		JsonObject event = (JsonObject) eventIterator.next();
		JsonValue eventId = event.get(&quot;id&quot;);
		log.info(&quot;Putting IDs:&quot; + &quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot; + &quot;:&quot; + eventId.asString());
		vars.put(&quot;D&quot;+d_idx+&quot;E&quot;+e_idx+&quot;_ID&quot;, eventId.asString());
		e_idx++;
	}
	d_idx++;
}
log.info(&quot;-------------------------------------------&quot;);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Get Planner Events - Verify DATES Added and Extract DAY and EVENT IDs" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 5: ${D5_ID} has been ADDED to Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104064395">${D5_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 6: ${D6_ID} has been ADDED to Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104987916">${D6_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 7: ${D7_ID} has been ADDED to Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2105911437">${D7_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Delete Specific Planner DATES" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Delete Existing DATE (one event) from Day 5: ${D5_ID} - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ {&#xd;
  &quot;id&quot;:&quot;${D5_ID}&quot;,&#xd;
  &quot;date&quot;: &quot;${MUSICEVENT_DAY5}&quot;&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Get Planner DATES/Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 1: ${D1_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104064395">${D5_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 3/Event1 ${D3_ID} is Exists" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2102217353">${D3_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 4: ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 5: ${D5_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104064395">${D5_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Delete Existing DATE (two events) from Day 6: ${D6_ID} - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[ {&#xd;
  &quot;id&quot;:&quot;${D6_ID}&quot;&#xd;
} ]&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree/>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES / EVENTS - Get Planner DATES/Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 1: ${D1_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104064395">${D5_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 2 / Event 2: ${D2E2_ID} still exists and has UPDATED NAME field" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-56098859">${D2E2_ID}</stringProp>
                    <stringProp name="662811828">${MUSICEVENT_DAY2}</stringProp>
                    <stringProp name="-1683140393">REMOVED EVENT1</stringProp>
                    <stringProp name="-741541059">ONLY SEQ 2 REMAINS!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 3/Event1 ${D3E1_ID} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="830481301">${D3E1_ID}</stringProp>
                    <stringProp name="662811859">${MUSICEVENT_DAY3}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 4: ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 5: ${D5_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104064395">${D5_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 6: ${D6_ID} has been deleted/removed from Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2104987916">${D6_ID}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Day 7: ${MUSICEVENT_DAY7} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="87375771">${D7E3_ID}</stringProp>
                    <stringProp name="2105911437">${D7_ID}</stringProp>
                    <stringProp name="662811983">${MUSICEVENT_DAY7}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Update Existing DATES - Error Conditions" enabled="true"/>
            <hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES - Update - Different DATE ID Not Allowed - Day 3: ${D3_ID} - MUSIC" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
[ {&#xd;
  &quot;id&quot;: &quot;${NON_EXISTENT_ID}&quot;,&#xd;
  &quot;date&quot; : &quot;${MUSICEVENT_DAY3}&quot;,&#xd;
  &quot;events&quot; : [ {&#xd;
    &quot;name&quot; : &quot;${MUSICEVENT_DAY3} MUSIC DAY 3 / EVENT 1  - ORIG DTE: ${MUSICEVENT_DAY3}--&gt; D3/E1&quot;,&#xd;
    &quot;fixed&quot; : false,&#xd;
    &quot;instructional&quot; : true,&#xd;
    &quot;type&quot; : &quot;INSTRUCTIONAL&quot;,&#xd;
    &quot;seq&quot; : 1,&#xd;
     &quot;id&quot;: &quot;${D3E1_ID}&quot;&#xd;
               }]&#xd;
  }            ]&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/plannerDates</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify Error if an DATE ID is passed that does not exist within a specific Planner" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1302507194">Invalid request</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="DATES / EVENTS - Get Planner Events - Verify Updates for Music Planner" enabled="true">
                <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
                <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
                <boolProp name="OAuthSampler.url_encode">false</boolProp>
                <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
                <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
                <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
                <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                <stringProp name="HTTPSampler.port">${basePort}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${MUSICEVENT_DAY1}&amp;to=${ENDOF_NEXT_YEAR}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify ${MUSICEVENT_DAY4} is Unchanged" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="662811890">${MUSICEVENT_DAY4}</stringProp>
                    <stringProp name="614719606">UNCHANGED MUSIC DAY 4 / EVENT 1 </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Data Clean-up of Events, Curriculum and Planner" enabled="true"/>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Delete Planner - ${PLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner - OCR Flow" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Book Id Data Set Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/bookID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Standard Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/standardID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="From and To Dates Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/FromandToDates.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Course IDs Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/courseIDs.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Lesson Id Data Config" enabled="true">
            <stringProp name="filename">${ENVIRONMENT}/lessonID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">username,password</stringProp>
            </CSVDataSet>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***PLANNER*** - OCR - ${ENVIRONMENT}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token"></stringProp>
              <stringProp name="OAuthSampler.token_secret"></stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject sessionObject = JsonObject.readFrom(loginString);
  	JsonValue id = sessionObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = sessionObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());

JsonObject links = sessionObject.get(&quot;_links&quot;).asObject() ;
JsonValue user = links.get(&quot;user&quot;);
String userLink = user.asString();
log.info(userLink);
String [] userData = userLink.split(&quot;/api/v0.1/user/&quot;);
log.info(userData[1]);
vars.put(&quot;USER_ID&quot;,userData[1]);
  	</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create OCR Planner - verify error if missing request body" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Verify error if missing request body</stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Verify error if missing request body" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1675948648">invalid.request</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify error if missing request body</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Create Planner - OCR" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;name&quot;:&quot;TESTING_OCR TEST Planner&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Planner ID" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
JsonObject jsonObject = JsonObject.readFrom(classString);
JsonValue id = jsonObject.get(&quot;id&quot;);
vars.put(&quot;PLANNER_ID&quot;,id.asString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Add Curriculum - With Start Date of &quot;Today&quot; - OCR" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/addCurriculum?course=${OCR_COURSEID_1}&amp;startDate=${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree/>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Events from &quot;Today&quot; to &quot;One Year from Today&quot; - OCR" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/events?from=${__time(yyyy-MM-dd,)}&amp;to=${__PlusDays(${__time(yyyy-MM-dd)},365)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Validate Multiple Lesson IDs on same Day - OCR" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonArray;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;

String classString = prev.getResponseDataAsString();
String[] lessonIds = classString.split(&quot;lessonID&quot;);
if(lessonIds.length &gt;=2 )
{
	System.out.println(&quot;here&quot;);
	FailureMessage=&quot;Haa&quot;;
	Failure= true;
}


</stringProp>
            <stringProp name="TestPlan.comments">OCR Planner - Validate Multiple Lesson IDs on same Day</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Delete Curriculum (Purge course events) - OCR" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/${PLANNER_ID}/curriculum?course=${OCR_COURSEID_1}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner Test Data Clean-up Controller" enabled="true"/>
        <hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get Test Planner For Clean-up - ${ENVIRONMENT}" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/user/${USER_ID}/planners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import com.eclipsesource.json.JsonArray;

String programs = prev.getResponseDataAsString();
JsonArray jsonArray = JsonArray.readFrom(programs);

Iterator jsonArrayI = jsonArray.iterator();
int childIdx = 1;
int idx = 1;
while(jsonArrayI.hasNext()) {
	JsonObject actualValue = (JsonObject) jsonArrayI.next();
	
	if (null != actualValue.get(&quot;description&quot;) &amp;&amp; actualValue.get(&quot;description&quot;).asString().contains(&quot;TESTING_CHILD&quot;)
	|| null != actualValue.get(&quot;name&quot;) &amp;&amp; actualValue.get(&quot;name&quot;).asString().contains(&quot;TESTING_CHILD&quot;)) {	
		JsonValue id = actualValue.get(&quot;id&quot;);
		vars.put(&quot;DELETE_CHILD_ID&quot;+childIdx,id.asString());
		childIdx++;
	} else if (null != actualValue.get(&quot;description&quot;) &amp;&amp; actualValue.get(&quot;description&quot;).asString().contains(&quot;TESTING_&quot;)
	|| null != actualValue.get(&quot;name&quot;) &amp;&amp; actualValue.get(&quot;name&quot;).asString().contains(&quot;TESTING_&quot;)) {	
		JsonValue id = actualValue.get(&quot;id&quot;);
		vars.put(&quot;DELETE_ID&quot;+idx,id.asString());
		idx++;
	}
	
}


</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Child Planner for User ID ${USER_ID}" enabled="true">
            <stringProp name="ForeachController.inputVal">DELETE_CHILD_ID</stringProp>
            <stringProp name="ForeachController.returnVal">DPLANNER_ID</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
          </ForeachController>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="CLEAN-UP - Delete  Child Test Planners - ${DPLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${DPLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Clean up test data</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Planner for User ID ${USER_ID}" enabled="true">
            <stringProp name="ForeachController.inputVal">DELETE_ID</stringProp>
            <stringProp name="ForeachController.returnVal">DPLANNER_ID</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
          </ForeachController>
          <hashTree>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="CLEAN-UP - Delete  Test Planners - ${DPLANNER_ID}" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v0.1/planner/${DPLANNER_ID}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Clean up test data</stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Planner-US National Holidays" enabled="true"/>
        <hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get US holidays for a specific date range existing in DB" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/holidays?from=2014-05-07&amp;to=2016-08-28</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response not empty" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3938">{}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get US holidays for a specific date range too far in future" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/holidays?from=2020-01-07&amp;to=2022-08-28</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Empty Response" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3938">{}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get US holidays when no date range provided" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/holidays</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response not empty" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3938">{}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="Get US holidays for a specific not defined in DB" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
            <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/planner/holidays?from=2017-05-07&amp;to=2018-08-28</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Empty Response" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3938">{}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Save Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">../projects/results/results-${__time(yyyy-MM-dd-HH-mm-ss)}.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SplineVisualizer" testclass="ResultCollector" testname="Spline Visualizer" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">10</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="Test Plan" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
