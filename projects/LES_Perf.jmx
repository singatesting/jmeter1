<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Run Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">/Users/gaurav_vishnoi/Downloads/apache-jmeter-2.11/projects</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="set Environment" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ENVIRONMENT" elementType="Argument">
            <stringProp name="Argument.name">ENVIRONMENT</stringProp>
            <stringProp name="Argument.value">${__P(env,perf)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER" elementType="Argument">
            <stringProp name="Argument.name">SERVER</stringProp>
            <stringProp name="Argument.value">Apache</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="OAuth Server Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${ENVIRONMENT}/jmeter-oauth.csv</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">baseURL,basePort,consumerKey,consumerSecret</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="OAuth Individual Server Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${ENVIRONMENT}/jmeter-oauth-individual.csv</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">baseURL,basePort,consumerKey,consumerSecret</stringProp>
      </CSVDataSet>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Set default Accept and Content-Type" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-Experience-API-Version</stringProp>
            <stringProp name="Header.value">1.0.0</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Standard Test Plan" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1408385079000</longProp>
        <longProp name="ThreadGroup.end_time">1408385079000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Self Controller" enabled="true">
          <stringProp name="IncludeController.includepath">LES_Perf.jmx</stringProp>
        </IncludeController>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Standard Test Fragment" enabled="true"/>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${ENVIRONMENT}/jmeter-login.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">username,password</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Read Data into variables from CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.text.*;
import java.io.*;
import java.util.*;



ArrayList strList = new ArrayList();     

try {
    File file = new File(&quot;C:/Jmeter/projects/dev/vizReporting_Rec.csv&quot;);

    if (!file.exists()) {
        throw new Exception (&quot;ERROR: file &quot; + csvTest + &quot; not found in &quot; + csvDir + &quot; directory.&quot;);
    }

    BufferedReader bufRdr = new BufferedReader(new FileReader(file));
    String line = null;

    while((line = bufRdr.readLine()) != null) {
        strList.add(line);
    }
    bufRdr.close();            
   for (int i=0; i&lt;strList.size; i++) {
 vars.put(strList.get(i).split(&quot;&amp;&amp;&amp;&amp;&quot;)[0],strList.get(i).split(&quot;&amp;&amp;&amp;&amp;&quot;)[1]);
   } 

   
}
catch (Exception ex) {
    IsSuccess = false; 
    log.error(ex.getMessage());
    System.err.println(ex.getMessage());
}
catch (Throwable thex) {
    System.err.println(thex.getMessage());
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <kg.apc.jmeter.config.VariablesFromCSV guiclass="kg.apc.jmeter.config.VariablesFromCSVGui" testclass="kg.apc.jmeter.config.VariablesFromCSV" testname="Read Data from CSV" enabled="true">
            <collectionProp name="Arguments.arguments"/>
            <stringProp name="filename">../projects/${ENVIRONMENT}/vizReporting_Rec.csv</stringProp>
            <stringProp name="variablesPrefix"></stringProp>
            <stringProp name="delimiter">&amp;&amp;&amp;&amp;</stringProp>
            <intProp name="skipLines">0</intProp>
            <boolProp name="storeSysProp">true</boolProp>
          </kg.apc.jmeter.config.VariablesFromCSV>
          <hashTree/>
          <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="LOGIN API - ***STANDARD*** - ${ENVIRONMENT}" enabled="true">
            <stringProp name="OAuthSampler.consumer_key">${consumerKey}</stringProp>
            <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
            <boolProp name="OAuthSampler.url_encode">false</boolProp>
            <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
            <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
            <stringProp name="OAuthSampler.oauth_token"></stringProp>
            <stringProp name="OAuthSampler.token_secret"></stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;${username}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port">${basePort}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v0.1/session</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Extract Oauth Token" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.eclipsesource.*;
import com.eclipsesource.json.JsonObject;
import com.eclipsesource.json.JsonValue;
import org.apache.jmeter.util.JMeterUtils;



	String loginString = prev.getResponseDataAsString();
  	JsonObject jsonObject = JsonObject.readFrom(loginString);
  	JsonValue id = jsonObject.get(&quot;oauth_token&quot;);
  	vars.put(&quot;OAUTHTOKEN&quot;,id.asString());
	id = jsonObject.get(&quot;oauth_token_secret&quot;);
  	vars.put(&quot;OAUTHTOKENSECRET&quot;,id.asString());
   
  	
  	</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JWT-Authorize" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="PAY_LOAD" elementType="Argument">
                <stringProp name="Argument.name">PAY_LOAD</stringProp>
                <stringProp name="Argument.value">{\&quot;fizzzzzzzzzzzzzzzzzzzzzzzzz\&quot;:\&quot;buzzzzzzzzzzzzzzzzzzzzzz\&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="FIZZ" elementType="Argument">
                <stringProp name="Argument.name">FIZZ</stringProp>
                <stringProp name="Argument.value">fizzzzzzzzzzzzzzzzzzzzzzzzz</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="BUZZ" elementType="Argument">
                <stringProp name="Argument.name">BUZZ</stringProp>
                <stringProp name="Argument.value">buzzzzzzzzzzzzzzzzzzzzzz</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CLASS_ID_WAIT" elementType="Argument">
                <stringProp name="Argument.name">CLASS_ID_WAIT</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="VIZ_REPORT_WAIT" elementType="Argument">
                <stringProp name="Argument.name">VIZ_REPORT_WAIT</stringProp>
                <stringProp name="Argument.value">5000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_1" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_1</stringProp>
                <stringProp name="Argument.value">MNB94JPHSQB7SK96MPNO6E3VR4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_2" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_2</stringProp>
                <stringProp name="Argument.value">GYEXGJ9OJYWME2TYMVK8XCM43O</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_3" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_3</stringProp>
                <stringProp name="Argument.value">ED4CKB9K8SRYOMM2H5ZQSJN921</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_4" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_4</stringProp>
                <stringProp name="Argument.value">Y3XS622EB9Y9CXFQXXOGYMT7CQ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_5" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_5</stringProp>
                <stringProp name="Argument.value">VVP49P31861P1Q4NH23C5M52M1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_6" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_6</stringProp>
                <stringProp name="Argument.value">9LDOCTYP3SZX7LWC99BG7YLS5O</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_7" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_7</stringProp>
                <stringProp name="Argument.value">B5P8GB8PF3Y1S8ZJF8ZZBLWGXE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_8" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_8</stringProp>
                <stringProp name="Argument.value">LG26BTDMHOEKOBDOSLZJRQPZ3Q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_9" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_9</stringProp>
                <stringProp name="Argument.value">JRYLRE7FDC7ESDDSTG2D77FMR1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_10" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_10</stringProp>
                <stringProp name="Argument.value">SN6V14V54QHZEDZHMR4SELZJKY</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_11" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_11</stringProp>
                <stringProp name="Argument.value">JNH6LWB136VONHY2GGJNJSOGY8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_12" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_12</stringProp>
                <stringProp name="Argument.value">9WZWHQPTQR8WYD9Y8HELY6GQNE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_13" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_13</stringProp>
                <stringProp name="Argument.value">B5K1LP3OXV3313TR79NY7LZQP1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_14" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_14</stringProp>
                <stringProp name="Argument.value">G61P1V5H2CDZF84TO2HR1ROT9Q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_15" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_15</stringProp>
                <stringProp name="Argument.value">DX7L95VK8VK2QT326OFZDDNZS8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_16" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_16</stringProp>
                <stringProp name="Argument.value">J3HH7YC7QT1EBKNT2NBXF1VX4Y</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_17" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_17</stringProp>
                <stringProp name="Argument.value">W4OKCXC4JLR8FP9SDG8V282W2O</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_18" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_18</stringProp>
                <stringProp name="Argument.value">1JFEPBOJP267BL37TH7K8ORCD4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_19" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_19</stringProp>
                <stringProp name="Argument.value">1PT2JO912G118R753F9CDYLC6O</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_20" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_20</stringProp>
                <stringProp name="Argument.value">WN18CPF1914XRQ4H915NYKFST4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_21" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_21</stringProp>
                <stringProp name="Argument.value">KP3VW7EBFDSGOMKOYL3RZ64MPQ</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_22" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_22</stringProp>
                <stringProp name="Argument.value">OM329BHOC2J2DTQT4E6VW3833Q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_23" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_23</stringProp>
                <stringProp name="Argument.value">S8FZLFOSNQYCW2JXBB9V1YN5O1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_24" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_24</stringProp>
                <stringProp name="Argument.value">12EE2MKXJGMD8H37MVERSVJHEY</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_25" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_25</stringProp>
                <stringProp name="Argument.value">1PWD5W6RJ4DN4FVMSON56H2VYO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_26" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_26</stringProp>
                <stringProp name="Argument.value">NFXBFSMNFQBKTG83XOM39Z876Q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_27" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_27</stringProp>
                <stringProp name="Argument.value">3CBZSE7Z5YKOVL8QCN1E2HTY2Q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_28" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_28</stringProp>
                <stringProp name="Argument.value">Z64M8BYXGKLDFVD7DG9Y6KR7EY</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_29" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_29</stringProp>
                <stringProp name="Argument.value">PGT4MBVS5VL8LGXF77BG7DGXC8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="STUDENT_30" elementType="Argument">
                <stringProp name="Argument.name">STUDENT_30</stringProp>
                <stringProp name="Argument.value">YTSLFPCO5ZBZ8V5VHTBTKJO3J4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Data Config - Delimited by &amp;&amp;&amp;&amp;" enabled="false">
            <stringProp name="filename">${ENVIRONMENT}/vizReporting_Rec.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">&amp;&amp;&amp;&amp;</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JWT_Authorize" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;ssoToken&quot; : &quot;${OAUTHTOKEN}&quot;,&#xd;
    &quot;issuerId&quot;:&quot;1&quot;,&#xd;
    &quot;payload&quot;:&quot;{&apos;${FIZZ}&apos;:&apos;${BUZZ}&apos;}&quot;,&#xd;
     &quot;ttlOnMinutes&quot;:&quot;300&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jwt-service/authorize/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
              <stringProp name="VAR">JWT_TOKEN</stringProp>
              <stringProp name="JSONPATH">$.result</stringProp>
              <stringProp name="DEFAULT"></stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1_Happy_Path_Scenario" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Random Class ID" enabled="false"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Create_Random_Class_ID" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;CLASS_ID_3&quot;,&quot;${__RandomString(26,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}&quot;);

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CLASS_ID_WAIT}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">true</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">true</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">42</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">42</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">week-counter</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">30</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">30</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">student-counter</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LES_Create_Context_Assessment" enabled="true"/>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${JWT_TOKEN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Create_Context" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{ &#xd;
	&quot;id&quot; : null,&#xd;
    &quot;contextUrl&quot; : null,&#xd;
    &quot;contextCreationDate&quot; : &quot;${__V(START_DATE_${week-counter})}&quot;,&#xd;
    &quot;edAppName&quot; : &quot;ReadingWonders2.0&quot;,&#xd;
    &quot;edAppId&quot; : &quot;reading-wonders-2&quot;,&#xd;
    &quot;activityId&quot; : &quot;assessment-activity-${week-counter}-1&quot;,&#xd;
    &quot;description&quot; : null,&#xd;
    &quot;assignmentId&quot; : &quot;assessment-assignmentId-${week-counter}-1&quot;,&#xd;
    &quot;districtId&quot; : &quot;test-district-id&quot;,&#xd;
    &quot;schoolId&quot; : &quot;test-school-id&quot;,&#xd;
    &quot;classId&quot; : &quot;SNP8LXP92KZDEZC6FDQ72CPHB8&quot;,&#xd;
    &quot;instructorIds&quot; : [ &quot;instructorId&quot; ],&#xd;
    &quot;userId&quot; : &quot;${__V(STUDENT_${student-counter})}&quot; ,&#xd;
    &quot;courseId&quot; : &quot;test-course-id&quot;,&#xd;
    &quot;activityType&quot; : &quot;assessment&quot;,&#xd;
    &quot;activityVendor&quot; : &quot;ConnectEd&quot;,&#xd;
    &quot;gradeLevel&quot; : &quot;4&quot;,&#xd;
    &quot;classGradeLevel&quot; : &quot;4&quot;,&#xd;
    &quot;subject&quot; : &quot;lang&quot;,&#xd;
    &quot;totalQuestions&quot; : 20,&#xd;
    &quot;baseUrl&quot; : &quot;http://example.mheducation.com/rw&quot;,&#xd;
    &quot;activityStartTime&quot; : &quot;${__V(START_DATE_${week-counter})}&quot;,&#xd;
    &quot;activityTitle&quot; : &quot;Test assessment week: ${week-counter}-1&quot;,&#xd;
    &quot;activityMaxScore&quot; : 80,&#xd;
    &quot;questionTaxonomyItems&quot; : [ ],&#xd;
    &quot;section&quot; : null,&#xd;
    &quot;subsection&quot; : null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/learning-event-service/contexts</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                    <stringProp name="VAR">CONTEXT_ID_ASSESSMENT</stringProp>
                    <stringProp name="JSONPATH">$.contextId</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                    <stringProp name="VAR">CONTEXT_URL_ASSESSMENT</stringProp>
                    <stringProp name="JSONPATH">$.contextUrl</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                    <stringProp name="VAR">SENSOR_URL_ASSESSMENT</stringProp>
                    <stringProp name="JSONPATH">$.sensorUrl</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LES_Check_Context_URL_Assessment" enabled="true"/>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${JWT_TOKEN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Check_Context_Url" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${CONTEXT_URL_ASSESSMENT}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="edAppName" enabled="false">
                    <stringProp name="JSON_PATH">$.edAppName</stringProp>
                    <stringProp name="EXPECTED_VALUE">ReadingWonders2.0</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="edAppId" enabled="false">
                    <stringProp name="JSON_PATH">$.edAppId</stringProp>
                    <stringProp name="EXPECTED_VALUE">reading-wonders-2</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityId" enabled="false">
                    <stringProp name="JSON_PATH">$.activityId</stringProp>
                    <stringProp name="EXPECTED_VALUE">8D9B2QZWOC8BSMG5FKSDPDNTRO</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="description" enabled="false">
                    <stringProp name="JSON_PATH">$.description</stringProp>
                    <stringProp name="EXPECTED_VALUE">Dev Test using the user: FIONAW</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assignmentId" enabled="false">
                    <stringProp name="JSON_PATH">$.assignmentId</stringProp>
                    <stringProp name="EXPECTED_VALUE">Jmeter-Assign-001</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="districtId" enabled="false">
                    <stringProp name="JSON_PATH">$.districtId</stringProp>
                    <stringProp name="EXPECTED_VALUE">districtId</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="schoolId" enabled="false">
                    <stringProp name="JSON_PATH">$.schoolId</stringProp>
                    <stringProp name="EXPECTED_VALUE">C3WZQGJMK9DXSOYMWO69GJ5TRE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="classId" enabled="false">
                    <stringProp name="JSON_PATH">$.classId</stringProp>
                    <stringProp name="EXPECTED_VALUE">${CLASS_ID_3}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="instructorIds" enabled="false">
                    <stringProp name="JSON_PATH">$.instructorIds</stringProp>
                    <stringProp name="EXPECTED_VALUE">[&quot;instructorId&quot;]</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="courseId" enabled="false">
                    <stringProp name="JSON_PATH">$.courseId</stringProp>
                    <stringProp name="EXPECTED_VALUE">Y1JBYW7RHROCKKFCWE7SLQPD84</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityType" enabled="false">
                    <stringProp name="JSON_PATH">$.activityType</stringProp>
                    <stringProp name="EXPECTED_VALUE">assessment</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityVendor" enabled="false">
                    <stringProp name="JSON_PATH">$.activityVendor</stringProp>
                    <stringProp name="EXPECTED_VALUE">VSM</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="gradeLevel" enabled="false">
                    <stringProp name="JSON_PATH">$.gradeLevel</stringProp>
                    <stringProp name="EXPECTED_VALUE">4</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="baseUrl" enabled="false">
                    <stringProp name="JSON_PATH">$.baseUrl</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://connected.mheducation.com/rw</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityTitle" enabled="false">
                    <stringProp name="JSON_PATH">$.activityTitle</stringProp>
                    <stringProp name="EXPECTED_VALUE">ASS-0512-009</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityMaxScore" enabled="false">
                    <stringProp name="JSON_PATH">$.activityMaxScore</stringProp>
                    <stringProp name="EXPECTED_VALUE">10</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="activityStartTime" enabled="false">
                    <stringProp name="JSON_PATH">$.activityStartTime</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">false</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                    <stringProp name="VAR">CLASS_ID</stringProp>
                    <stringProp name="JSONPATH">$.classId</stringProp>
                    <stringProp name="DEFAULT"></stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LES_Create_Events_Assessment" enabled="true"/>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${JWT_TOKEN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Create_activityStarted_Event" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;verb&quot;: &quot;activityStarted&quot;,&#xd;
  &quot;payload&quot;: {&#xd;
  &quot;title&quot;: &quot;ASS-0512991&quot;,&#xd;
  &quot;description&quot;: &quot;Dev Test using the user: FIONAW&quot;,&#xd;
  &quot;startedAtTime&quot;: &quot;2016-05-12T16:32:41.099Z&quot;,&#xd;
  &quot;maxScore&quot;: 10,&#xd;
  &quot;totalQuestions&quot;: 1,&#xd;
  &quot;learningObjectives&quot;: [&#xd;
    &quot;_c566bc1f-72dc-483d-bb88-f802f9d62b7c&quot;,&#xd;
    &quot;_ddbd9d44-9537-49c9-8726-d56a879acdaa&quot;,&#xd;
    &quot;_3154813b-0b73-4a16-801f-d02f71f9c2a6&quot;&#xd;
&#xd;
  ]&#xd;
  &#xd;
}&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${SENSOR_URL_ASSESSMENT}?returnEvents=false</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="eventType" enabled="true">
                    <stringProp name="JSON_PATH">$.eventType</stringProp>
                    <stringProp name="EXPECTED_VALUE">activityStarted</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmenStarted" enabled="true">
                    <stringProp name="JSON_PATH">$.events.assessmentStarted.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Started</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">20</stringProp>
                </LoopController>
                <hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end">20</stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">item-counter</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">false</boolProp>
                  </CounterConfig>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Create_activityItem_Event_FillinBlankResponse-1" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;verb&quot; : &quot;assessmentItemGraded&quot;,&#xd;
    &quot;sequence&quot; : 1,&#xd;
    &quot;payload&quot; : {&#xd;
      &quot;startedAtTime&quot; : &quot;${__V(START_DATE_${week-counter})}&quot;,&#xd;
      &quot;endedAtTime&quot; : &quot;${__V(END_DATE_${week-counter})}&quot;,&#xd;
      &quot;eventTime&quot; : &quot;${__V(END_DATE_${week-counter})}&quot;,&#xd;
      &quot;duration&quot; : 300000,&#xd;
      &quot;itemId&quot; : &quot;test-assessment-item-id-1-${item-counter}&quot;,&#xd;
      &quot;correctResponsePattern&quot; : [ {&#xd;
        &quot;prompt&quot; : &quot;assessment prompt 1-1&quot;,&#xd;
        &quot;type&quot; : &quot;http://purl.imsglobal.org/caliper/v1/FillinBlankResponse&quot;&#xd;
      } ],&#xd;
      &quot;studentResponse&quot; : null,&#xd;
      &quot;itemNumber&quot; : ${item-counter},&#xd;
      &quot;displaySequence&quot; : ${item-counter},&#xd;
      &quot;maxScore&quot; : 4,&#xd;
      &quot;normalScore&quot; : 4,&#xd;
      &quot;extraCreditScore&quot; : null,&#xd;
      &quot;scoredBy&quot; : &quot;SoftwareApplication&quot;,&#xd;
      &quot;difficulty&quot; : null,&#xd;
      &quot;comment&quot; : null,&#xd;
      &quot;learningObjectives&quot; : [${__V(TAXONOMIES_${week-counter})}]&#xd;
    }&#xd;
  }</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${SENSOR_URL_ASSESSMENT}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="eventType" enabled="false">
                      <stringProp name="JSON_PATH">$.eventType</stringProp>
                      <stringProp name="EXPECTED_VALUE">activityItem</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemStarted" enabled="false">
                      <stringProp name="JSON_PATH">$.events.assessmentItemStarted.action</stringProp>
                      <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Started</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemCompleted" enabled="false">
                      <stringProp name="JSON_PATH">$.events.assessmentItemCompleted.action</stringProp>
                      <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Completed</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemGraded" enabled="false">
                      <stringProp name="JSON_PATH">$.events.assessmentItemGraded.action</stringProp>
                      <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Graded</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Create_activityItem_Event_FillinBlankResponse-2" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;verb&quot; : &quot;assessmentItemGraded&quot;,&#xd;
    &quot;sequence&quot; : 1,&#xd;
    &quot;payload&quot; : {&#xd;
          &quot;startedAtTime&quot; : &quot;${START_DATE}&quot;,&#xd;
      &quot;endedAtTime&quot; : &quot;${END_DATE}&quot;,&#xd;
      &quot;eventTime&quot; : &quot;${END_DATE}&quot;,&#xd;
      &quot;duration&quot; : 300000,&#xd;
      &quot;itemId&quot; : &quot;test-assessment-item-id-1-1&quot;,&#xd;
      &quot;correctResponsePattern&quot; : [ {&#xd;
        &quot;prompt&quot; : &quot;assessment prompt 1-1&quot;,&#xd;
        &quot;type&quot; : &quot;http://purl.imsglobal.org/caliper/v1/FillinBlankResponse&quot;&#xd;
      } ],&#xd;
      &quot;studentResponse&quot; : null,&#xd;
      &quot;itemNumber&quot; : 1,&#xd;
      &quot;displaySequence&quot; : 1,&#xd;
      &quot;maxScore&quot; : 4,&#xd;
      &quot;normalScore&quot; : 0,&#xd;
      &quot;extraCreditScore&quot; : null,&#xd;
      &quot;scoredBy&quot; : &quot;SoftwareApplication&quot;,&#xd;
      &quot;difficulty&quot; : null,&#xd;
      &quot;comment&quot; : null,&#xd;
      &quot;learningObjectives&quot; : [${TAXONOMIES} ]&#xd;
    }&#xd;
  }</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${SENSOR_URL_ASSESSMENT}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="eventType" enabled="true">
                    <stringProp name="JSON_PATH">$.eventType</stringProp>
                    <stringProp name="EXPECTED_VALUE">activityItem</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemStarted" enabled="true">
                    <stringProp name="JSON_PATH">$.events.assessmentItemStarted.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Started</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemCompleted" enabled="true">
                    <stringProp name="JSON_PATH">$.events.assessmentItemCompleted.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Completed</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemGraded" enabled="true">
                    <stringProp name="JSON_PATH">$.events.assessmentItemGraded.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Graded</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LES_Create_activityCompleted_Event" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;verb&quot; : &quot;assessmentGraded&quot;,&#xd;
    &quot;sequence&quot; : 1,&#xd;
    &quot;payload&quot; : {&#xd;
       &quot;startedAtTime&quot; : &quot;${__V(START_DATE_${week-counter})}&quot;,&#xd;
      &quot;endedAtTime&quot; : &quot;${__V(END_DATE_${week-counter})}&quot;,&#xd;
      &quot;eventTime&quot; : &quot;${__V(END_DATE_${week-counter})}&quot;,&#xd;
      &quot;duration&quot; : 1200000,&#xd;
      &quot;normalScore&quot; : 80,&#xd;
      &quot;extraCreditScore&quot; : null,&#xd;
      &quot;learningObjectives&quot; : [${__V(TAXONOMIES_${week-counter})}],&#xd;
      &quot;scoredBy&quot; : &quot;SoftwareApplication&quot;,&#xd;
      &quot;maxScore&quot; : 80&#xd;
    }&#xd;
  }</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${SENSOR_URL_ASSESSMENT}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="eventType" enabled="false">
                    <stringProp name="JSON_PATH">$.eventType</stringProp>
                    <stringProp name="EXPECTED_VALUE">activityCompleted</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentSubmitted" enabled="false">
                    <stringProp name="JSON_PATH">$.events.assessmentSubmitted.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Submitted</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="assessmentItemGraded" enabled="false">
                    <stringProp name="JSON_PATH">$.events.assessmentGraded.action</stringProp>
                    <stringProp name="EXPECTED_VALUE">http://purl.imsglobal.org/vocab/caliper/v1/action#Graded</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Viz-Reporting-Validation" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${VIZ_REPORT_WAIT}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <org.apache.jmeter.protocol.oauth.sampler.OAuthSampler guiclass="org.apache.jmeter.protocol.oauth.control.gui.OAuthSamplerGui" testclass="org.apache.jmeter.protocol.oauth.sampler.OAuthSampler" testname="1_Viz Reporting-Activities-Validations" enabled="true">
              <stringProp name="OAuthSampler.consumer_key">${consumerKey</stringProp>
              <boolProp name="OAuthSampler.use_auth_header">true</boolProp>
              <boolProp name="OAuthSampler.url_encode">false</boolProp>
              <stringProp name="OAuthSampler.signature_method">HMAC-SHA1</stringProp>
              <stringProp name="OAuthSampler.consumer_secret">${consumerSecret}</stringProp>
              <stringProp name="OAuthSampler.oauth_token">${OAUTHTOKEN}</stringProp>
              <stringProp name="OAuthSampler.token_secret">${OAUTHTOKENSECRET}</stringProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;classIds&quot;: [&quot;${CLASS_ID}&quot;],&quot;roster&quot;: [&quot;3QBQ9DJM9ZSSD9NHBHTRJYLXY8&quot;,&quot;QBMHBHVW6SCZGER258LKNGTK6Q&quot;,&quot;V4V4BOS24DNHLM95WK3Q41GVX1&quot;,&quot;VSSCFRMBP4XV6D8SEMT2RXGL91&quot;,&quot;W92NTOY141YC2V6SJHMZH8W3S8&quot;,&quot;Y3V4Y72D6LYZV327BEK5VYMNC8&quot;],&quot;skills&quot;:{},&quot;boundsLower&quot;: &quot;${START_DATE}&quot;,&quot;boundsUpper&quot;: &quot;${END_DATE}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${baseURL}</stringProp>
              <stringProp name="HTTPSampler.port">${basePort}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">viz-reporting-service/reports/classes/activities</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </org.apache.jmeter.protocol.oauth.sampler.OAuthSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Json Response Validation" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-183890844">${CLASS_ID}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Save Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\singaraju_kusampudi\Desktop\events_rejected</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SplineVisualizer" testclass="ResultCollector" testname="Spline Visualizer" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">10</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="Test Plan" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
